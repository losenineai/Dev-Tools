
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

TARGET(elf32-i386)
                0x0000000000401080                . = ((0x401000 + SIZEOF_HEADERS) + 0xc)

.data           0x0000000000401080      0x388
 *(.text)
 .text          0x0000000000401080       0x1c tmp/i386-bsd.elf.execve-fold.o
 .text          0x000000000040109c      0x2d5 tmp/i386-bsd.elf.execve-main.o
                0x0000000000401153                upx_main
 *fill*         0x0000000000401371        0x3 00
 .text          0x0000000000401374       0x6d tmp/i386-bsd.syscall.o
                0x00000000004013dd                waitpid
                0x00000000004013b1                munmap
                0x00000000004013c5                execve
                0x00000000004013bd                getpid
                0x00000000004013cd                ftruncate
                0x0000000000401374                mmap
                0x00000000004013d5                nanosleep
                0x00000000004013a5                write
                0x00000000004013a1                read
                0x00000000004013d9                unlink
                0x00000000004013c9                fork
                0x00000000004013d1                gettimeofday
                0x00000000004013b9                access
                0x0000000000401399                exit
                0x0000000000401398                brk
                0x00000000004013a9                open
                0x00000000004013b5                mprotect
                0x00000000004013c1                fcntl
                0x00000000004013ad                close
 *fill*         0x00000000004013e1        0x3 00
 .text          0x00000000004013e4       0x23 tmp/i386-linux.elf.execve-upx_itoa.o
                0x00000000004013e4                upx_itoa
 *(.rodata)
 *(.data)
 *fill*         0x0000000000401407        0x1 00
 .data          0x0000000000401408        0x0 tmp/i386-bsd.elf.execve-fold.o
 .data          0x0000000000401408        0x0 tmp/i386-bsd.elf.execve-main.o
 .data          0x0000000000401408        0x0 tmp/i386-bsd.syscall.o
 .data          0x0000000000401408        0x0 tmp/i386-linux.elf.execve-upx_itoa.o
 *(.bss)
 .bss           0x0000000000401408        0x0 tmp/i386-bsd.elf.execve-fold.o
 .bss           0x0000000000401408        0x0 tmp/i386-bsd.elf.execve-main.o
 .bss           0x0000000000401408        0x0 tmp/i386-bsd.syscall.o
 .bss           0x0000000000401408        0x0 tmp/i386-linux.elf.execve-upx_itoa.o
 *(COMMON)

.rel.dyn        0x0000000000401408        0x0
 .rel.text      0x0000000000000000        0x0 tmp/i386-bsd.elf.execve-fold.o
LOAD tmp/i386-bsd.elf.execve-fold.o
LOAD tmp/i386-bsd.elf.execve-main.o
LOAD tmp/i386-bsd.syscall.o
LOAD tmp/i386-linux.elf.execve-upx_itoa.o
OUTPUT(tmp/i386-bsd.elf.execve-fold.bin elf32-i386)
